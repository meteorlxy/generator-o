module.exports = {
  root: true,

  extends: [
    <%- extendsConfig.map(item => `'${item}',`).join('\n    ') %>
  ],
  <%_ if (vue) { _%>

  parserOptions: {
    parser: <% if (typescript) { %>'@typescript-eslint/parser'<% } else { %>'babel-eslint'<% } %>,
  },
  <%_ } else if (typescript) { _%>

  parser: '@typescript-eslint/parser',
  <%_ } _%>
  <%_ if (vue || typescript || prettier) { _%>

  plugins: [
    <%_ if (vue) { _%>
    'vue',
    <%_ } _%>
    <%_ if (typescript) { _%>
    '@typescript-eslint',
    <%_ } _%>
    <%_ if (prettier) { _%>
    'prettier',
    <%_ } _%>
  ],

  rules: {
    <%_ if (vue) { _%>
    'vue/component-name-in-template-casing': [
      'error',
      'PascalCase',
      {
        registeredComponentsOnly: false,
        ignores: [],
      },
    ],
    'vue/match-component-file-name': [
      'error',
      {
        extensions: [<%- exts.map(item => `'${item}'`).join(', ') %>],
        shouldMatchCase: false,
      },
    ],
    <%_ } _%>
    <%_ if (typescript) { _%>
    'no-useless-constructor': 'off',
    '@typescript-eslint/no-useless-constructor': 'error',
    'import/prefer-default-export': 'off',
    'import/no-cycle': 'off',
    <%_ } _%>
    <%_ if (prettier) { _%>
    'prettier/prettier': 'error',
    <%_ } _%>
  },
  <%_ } _%>
};
